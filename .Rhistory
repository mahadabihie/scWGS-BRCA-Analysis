"TN_B1_0177" = "BRCA1 Tumor",
"TN_B1_0554" = "BRCA1 Tumor",
"TN_B1_4031" = "BRCA1 Tumor",
"N_1105_epi" = "Normal"))
#df with cells with 0 deletions
b17rest <- b17full %>%
filter(state > 2) %>%
#make amount 0 since there are no deletions for these cells
mutate(`Summed Length` = 0 / `full cell length`) %>%
mutate(`Percentage Deleted` = (`Summed Length`/`full cell length`)) %>% distinct(cell_group_name, .keep_all = TRUE)
#add genotype column
b17rest <- b17rest %>%
mutate(genotype = sample,
genotype = recode(genotype,
"TN_0106" = "TN Tumor",
"TN_0126" = "TN Tumor",
"TN_0114" = "TN Tumor",
"TN_0135" = "TN Tumor",
"TN_B1_0131" = "BRCA1 Tumor",
"TN_B1_0177" = "BRCA1 Tumor",
"TN_B1_0554" = "BRCA1 Tumor",
"TN_B1_4031" = "BRCA1 Tumor",
"N_1105_epi" = "Normal"))
#combine dfs
b17 <- rbind(b17del, b17rest)
#df with values at 1/100%: deleted length = full cell length
df100 <- b17
#remove normal samples
b17 <- b17 %>% filter(genotype != "Normal")
#remove values at 1 or over
b17 <- b17 %>% filter(`Percentage Deleted` < 1)
#remove normal samples
df100 <- df100 %>% filter(genotype != "Normal")
obj <- read.table(file = "~/brca-infercnv/pq-b1-tn-output-dir/17_HMM_predHMMi6.leiden.hmm_mode-subclusters.pred_cnv_genes.dat",
col.names = c("cell_group_name",  "gene_region_name", "state", "gene", "chr", "start", "end"))
#remove col names
obj <- obj[2:length(rownames(obj)),]
#filter for chromsome 17
b17full <- obj %>%
mutate(sample = gsub("\\..*","", obj$cell_group_name)) %>%
filter(chr == "17_q") %>%
mutate( state = recode(state,
"1" = "2",
"2" = "1")) %>%
mutate(Length = (as.numeric(end) - as.numeric(start))) %>%
mutate(state = as.numeric(state)) %>%
group_by(cell_group_name) %>%
mutate(`full cell length` = sum(Length)) %>%
mutate(`Summed States` = sum(state))
#add count
b17full$count <- 1:nrow(b17full)
#filter for deletions
b17del <- b17full %>%
filter(state < 3) %>%
mutate(state = as.numeric(state)) %>%
mutate(Length = (as.numeric(end) - as.numeric(start))) %>%
group_by(cell_group_name) %>%
mutate(`Summed Length` = sum(Length)) %>%
mutate(`Summed States` = sum(state)) %>%
mutate(`Percentage Deleted` = (`Summed Length`/`full cell length`)) %>% distinct(cell_group_name, .keep_all = TRUE)
#add genotype column
b17del <- b17del %>%
mutate(genotype = sample,
genotype = recode(genotype,
"TN_0106" = "TN Tumor",
"TN_0126" = "TN Tumor",
"TN_0114" = "TN Tumor",
"TN_0135" = "TN Tumor",
"TN_B1_0131" = "BRCA1 Tumor",
"TN_B1_0177" = "BRCA1 Tumor",
"TN_B1_0554" = "BRCA1 Tumor",
"TN_B1_4031" = "BRCA1 Tumor",
"N_1105_epi" = "Normal"))
#df with cells with 0 deletions
b17rest <- b17full %>%
filter(state > 3) %>%
#make amount 0 since there are no deletions for these cells
mutate(`Summed Length` = 0 / `full cell length`) %>%
mutate(`Percentage Deleted` = (`Summed Length`/`full cell length`)) %>% distinct(cell_group_name, .keep_all = TRUE)
#add genotype column
b17rest <- b17rest %>%
mutate(genotype = sample,
genotype = recode(genotype,
"TN_0106" = "TN Tumor",
"TN_0126" = "TN Tumor",
"TN_0114" = "TN Tumor",
"TN_0135" = "TN Tumor",
"TN_B1_0131" = "BRCA1 Tumor",
"TN_B1_0177" = "BRCA1 Tumor",
"TN_B1_0554" = "BRCA1 Tumor",
"TN_B1_4031" = "BRCA1 Tumor",
"N_1105_epi" = "Normal"))
#combine dfs
b17 <- rbind(b17del, b17rest)
#df with values at 1/100%: deleted length = full cell length
df100 <- b17
#remove normal samples
b17 <- b17 %>% filter(genotype != "Normal")
#remove values at 1 or over
b17 <- b17 %>% filter(`Percentage Deleted` < 1)
#remove normal samples
df100 <- df100 %>% filter(genotype != "Normal")
448+436
b17full <- b17full %>% distinct(cell_group_name, .keep_all = TRUE)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("dplyr")
library(dplyr)
#install.packages("ggplot2")
library(ggplot2)
#install.packages("kableExtra")
library(kableExtra)
#install.packages("data.table")
library(data.table)
process_amplifications <- function(file_path) {
#read in data
data <- read.csv(file_path)
#filter for amplifications
amplifications <- data %>%
filter(state > 2)
#read in sample info
cancer.history <- read.xlsx("~/brca-new/Williams et al./williams-samples.xlsx")
cancer.history <- cancer.history %>%
rename(sample = "patient_id",
cancer = current_past_cancer.in.contralateral.breast,
tissue = Final.Path.Diagnosis) %>%
dplyr::select(sample, chemo, cancer, tissue)
#edit sample info
cancer.history$chemo <- gsub("N/A", "no chemo", cancer.history$chemo)
cancer.history$chemo <- gsub("N", "no chemo", cancer.history$chemo)
cancer.history$chemo <- gsub("Y", "chemo", cancer.history$chemo)
cancer.history$tissue <- gsub("R:", "", cancer.history$tissue)
cancer.history$tissue <- gsub("R: ", "", cancer.history$tissue)
cancer.history$tissue <- gsub("L: ", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" UDH", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" cysts", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" non-proliferative", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" ", "", cancer.history$tissue)
#add sample info to df
amplifications <- amplifications %>%
left_join(cancer.history, by = "sample")
#add genotype for B1 or B2
amplifications <- amplifications %>%
mutate(genotype = ifelse(grepl("B1-6548", sample),
"B1/B2", sub("-.*", "", sample)))
#edit sample name
amplifications$sample <- gsub("-", ".", amplifications$sample)
#summarize state
amplifications <- amplifications %>%
group_by(cell_id) %>%
mutate(length = (as.numeric(end) - as.numeric(start)) / 1e6) %>%
mutate(sum.length = sum(length)) %>%
distinct(cell_id, .keep_all = TRUE) %>% #filter so each cell has 1 row
dplyr::select(cell_id, sample, genotype,  chemo, cancer, tissue, start, end, state, sum.length)
#extract the name from a column (e.g., sample_id)
if ("sample" %in% colnames(amplifications)) {
df_name <- unique(amplifications$sample)[1]  #take the first unique value
} else {
df_name <- tools::file_path_sans_ext(basename(file_path))  #use filename if column not present
}
assign(df_name, amplifications, envir = .GlobalEnv)  #save dataframe to global environment
return(df_name)  #return the name of the dataframe
}
#list of files
files <- c(
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET43-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET49-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6410-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6537-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6548-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6550-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET16-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET18-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET21-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET23-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET25-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET6532-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT6-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT62-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT6752-hscn.csv"
)
#run multiple files through function
df_names <- lapply(files, process_amplifications)  #process and store names
#combine dfs
df.cna <- rbind(B1.43, B1.49, B1.6410, B1.6537, B1.6548, B1.6550, B2.16, B2.18, B2.21, B2.23, B2.25,
B2.6532, WT.6, WT.62, WT.6752)
#organize b2 samples by tissue
df.cna$sample <- factor(df.cna$sample, levels = c(
"B1.43", "B1.49", "B1.6410", "B1.6537", "B1.6548", "B1.6550",
"B2.6532","B2.18", "B2.25", "B2.16", "B2.21", "B2.23",
"WT.6", "WT.62", "WT.6752"))
#generate plot
bplot <- ggplot(df.cna, aes(x = sample, y = sum.length, fill = tissue)) +
geom_violin(scale = "width", adjust = 1.5) +
geom_point(
aes(shape = chemo),     #shapes by chemo
position = position_jitter(width = 0.2, height = 0.1),
size = 2,
color = "black",                #black outline
stroke = 0.5                    #outline thickness
) +
scale_shape_manual(values = c(21, 24)) +  #21 = circle, 24 = triangle
#shape based on chemo status
labs(
title = "CNA Burdens - Luminal Breast Tissue",
y = "Megabases Affected"
) +
#color
scale_fill_brewer(palette = "Set3") +
#theme
theme_minimal(base_size = 15) +
#figure adjustments
theme(legend.position = "right",
panel.border = element_rect(fill = NA, color = "black", linewidth = 1.5),
strip.background = element_rect(fill = "grey90", color = "black", size = 1.5),
panel.spacing = unit(1, "lines"),
#axis.text.x = element_text(angle = 48, hjust = 1, size = 15),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
plot.title = element_text(face = "bold", hjust = 0.5),
axis.title.x=element_blank(),
axis.title.y = element_text(face = "bold")) +
#facet
facet_grid(. ~ genotype, scales = "free", space = "free")
#save plot
ggsave("~/brca-new/plots/plot_luminal_amplification_cnv.png")
#output plot
bplot  +
theme(strip.text = element_text(size = 7))
#benign non chemo ("B1.43" "B1.6410" "B1.6537" "B1.6550")
benign.non.chemo.b1 <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("B1"))
#benign non chemo ("WT.6" "WT.62")
benign.non.chemo.wt <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("WT"))
#wilcox test
wlx.amp.b1.benign.non.chemo <- wilcox.test(benign.non.chemo.b1$sum.length, benign.non.chemo.wt$sum.length, alternative = "two.sided")
#benign non chemo ("B2.6532")
benign.non.chemo.b2 <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("B2"))
#benign non chemo ("WT.6" "WT.62")
benign.non.chemo.wt <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("WT"))
#wilcox test for tumors
wlx.amp.b2.benign.non.chemo <- wilcox.test(benign.non.chemo.b2$sum.length, benign.non.chemo.wt$sum.length, alternative = "two.sided")
#benign non chemo ("B1.6548")
benign.non.chemo.b1b2 <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("B1/B2"))
#benign non chemo ("WT.6" "WT.62")
benign.non.chemo.wt <- df.cna %>%
filter(chemo == "no chemo", tissue == "benign", genotype %in% c("WT"))
#wilcox test for tumors
wlx.amp.b1b2.benign.non.chemo <- wilcox.test(benign.non.chemo.b1b2$sum.length, benign.non.chemo.wt$sum.length, alternative = "two.sided")
#new df
b1.wt <- rbind(benign.non.chemo.b1, benign.non.chemo.wt)
#SAMPLE: aggregate data based on sample level
mdn.smpl <- b1.wt %>%
group_by(sample, genotype) %>%
summarise(mb.amp = sum(sum.length))
#SAMPLE: calculate the median value per sample and genotype
st.mdn.smpl <- mdn.smpl %>%
group_by(sample, genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup()
#SAMPLE: extract the WT median per sample
wt_medians <- st.mdn.smpl %>%
filter(genotype == "WT") %>%
select(sample, `median value (amp)`) %>%
rename(`WT median value` = `median value (amp)`)
#SAMPLE: calculate the global WT median for missing samples
global_wt_median <- median(wt_medians$`WT median value`, na.rm = TRUE)
#SAMPLE: merge the WT median back to the full dataset
amp.b1.mdn.smpl <- st.mdn.smpl %>%
left_join(wt_medians, by = "sample") %>%
mutate(`median fold change (amp)` = ifelse(
is.na(`WT median value`),  # If no WT exists, use global median
`median value (amp)` / global_wt_median,
`median value (amp)` / `WT median value`
)) %>% dplyr::select(-`WT median value`)
#GENOTYPE: aggregate sizes based on event type and Genotype for ampetions in MB
mdn.gntp <- b1.wt %>%
group_by(genotype) %>%
summarise(mb.amp = sum(sum.length))
#GENOTYPE: median fold change for genotypes
amp.b1.mdn.gntp <- mdn.gntp %>%
group_by(genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup() %>%
mutate(`median fold change (amp)` = `median value (amp)` / `median value (amp)`[genotype == "WT"])
#new df
b2.wt <- rbind(benign.non.chemo.b2,benign.non.chemo.wt)
#SAMPLE: aggregate data based on sample level
mdn.smpl <- b2.wt %>%
group_by(sample, genotype) %>%
summarise(mb.amp = sum(sum.length))
#SAMPLE: calculate the median value per sample and genotype
st.mdn.smpl <- mdn.smpl %>%
group_by(sample, genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup()
#SAMPLE: extract the WT median per sample
wt_medians <- st.mdn.smpl %>%
filter(genotype == "WT") %>%
select(sample, `median value (amp)`) %>%
rename(`WT median value` = `median value (amp)`)
#SAMPLE: calculate the global WT median for missing samples
global_wt_median <- median(wt_medians$`WT median value`, na.rm = TRUE)
#SAMPLE: merge the WT median back to the full dataset
amp.b2.mdn.smpl <- st.mdn.smpl %>%
left_join(wt_medians, by = "sample") %>%
mutate(`median fold change (amp)` = ifelse(
is.na(`WT median value`),  # If no WT exists, use global median
`median value (amp)` / global_wt_median,
`median value (amp)` / `WT median value`
)) %>% dplyr::select(-`WT median value`)
#GENOTYPE: aggregate sizes based on event type and Genotype for ampetions in MB
mdn.gntp <- b2.wt %>%
group_by(genotype) %>%
summarise(mb.amp = sum(sum.length))
#GENOTYPE: median fold change for genotypes
amp.b2.mdn.gntp <- mdn.gntp %>%
group_by(genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup() %>%
mutate(`median fold change (amp)` = `median value (amp)` / `median value (amp)`[genotype == "WT"])
#new df
b1b2.wt <- rbind(benign.non.chemo.b1b2,benign.non.chemo.wt)
#SAMPLE: aggregate data based on sample level
mdn.smpl <- b1b2.wt %>%
group_by(sample, genotype) %>%
summarise(mb.amp = sum(sum.length))
#SAMPLE: calculate the median value per sample and genotype
st.mdn.smpl <- mdn.smpl %>%
group_by(sample, genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup()
#SAMPLE: extract the WT median per sample
wt_medians <- st.mdn.smpl %>%
filter(genotype == "WT") %>%
select(sample, `median value (amp)`) %>%
rename(`WT median value` = `median value (amp)`)
#SAMPLE: calculate the global WT median for missing samples
global_wt_median <- median(wt_medians$`WT median value`, na.rm = TRUE)
#SAMPLE: merge the WT median back to the full dataset
amp.b1b2.mdn.smpl <- st.mdn.smpl %>%
left_join(wt_medians, by = "sample") %>%
mutate(`median fold change (amp)` = ifelse(
is.na(`WT median value`),  # If no WT exists, use global median
`median value (amp)` / global_wt_median,
`median value (amp)` / `WT median value`
)) %>% dplyr::select(-`WT median value`)
#GENOTYPE: aggregate sizes based on event type and Genotype for ampetions in MB
mdn.gntp <- b1b2.wt %>%
group_by(genotype) %>%
summarise(mb.amp = sum(sum.length))
#GENOTYPE: median fold change for genotypes
amp.b1b2.mdn.gntp <- mdn.gntp %>%
group_by(genotype) %>%
summarise(`median value (amp)` = median(mb.amp)) %>%
ungroup() %>%
mutate(`median fold change (amp)` = `median value (amp)` / `median value (amp)`[genotype == "WT"])
#combine each result
wlx.amp.b1.benign.non.chemo <- list(comparison = "BRCA1 Carrier vs WT",
statistic = wlx.amp.b1.benign.non.chemo$statistic,
p.value = wlx.amp.b1.benign.non.chemo$p.value,
tissue = "Benign")
wlx.amp.b1.benign.non.chemo <- as.data.frame(wlx.amp.b1.benign.non.chemo, row.names = NULL)
wlx.amp.b2.benign.non.chemo <- list(comparison = "BRCA2 Carrier vs WT",
statistic = wlx.amp.b2.benign.non.chemo$statistic,
p.value = wlx.amp.b2.benign.non.chemo$p.value,
tissue = "Benign")
wlx.amp.b2.benign.non.chemo <- as.data.frame(wlx.amp.b2.benign.non.chemo, row.names = NULL)
wlx.amp.b1b2.benign.non.chemo <- list(comparison = "BRCA1/BRCA2 Carrier vs WT",
statistic = wlx.amp.b1b2.benign.non.chemo$statistic,
p.value = wlx.amp.b1b2.benign.non.chemo$p.value,
tissue = "Benign")
wlx.amp.b1b2.benign.non.chemo <- as.data.frame(wlx.amp.b1b2.benign.non.chemo, row.names = NULL)
#group results
wlx.df <- rbind(
as.data.frame(wlx.amp.b1.benign.non.chemo, row.names = NULL),
as.data.frame(wlx.amp.b2.benign.non.chemo, row.names = NULL),
as.data.frame(wlx.amp.b1b2.benign.non.chemo, row.names = NULL))
#add fdr
wlx.df <- wlx.df %>%
mutate(FDR = p.adjust(p = p.value,
method = "BH"))
#change significant digits
cna.wlx.df <- format(wlx.df, digits = 3)
#reorder
cna.wlx.df <- cna.wlx.df %>%
relocate(comparison, tissue)
#final df
cna.wlx.df  %>%
kbl(caption = "Wilcoxon Rank Sum Test Results", digits = 10) %>%
kable_classic(html_font = "Cambria") %>%
kable_styling()
### **sample: table of median fold change**
#remove excess lines (WT)
amp.b1.mdn.gntp <- amp.b1.mdn.gntp %>% filter(genotype != "WT")
amp.b2.mdn.gntp <- amp.b2.mdn.gntp %>% filter(genotype != "WT")
amp.b1b2.mdn.gntp <- amp.b1b2.mdn.gntp %>% filter(genotype != "WT")
#add column for comparisons
amp.b1.mdn.gntp$comparison <- "BRCA1 Carrier vs WT"
amp.b2.mdn.gntp$comparison <- "BRCA2 Carrier vs WT"
amp.b1b2.mdn.gntp$comparison <- "BRCA1/BRCA2 Carrier vs WT"
#add column for tissue type
amp.b1.mdn.gntp$tissue <- "Benign"
amp.b2.mdn.gntp$tissue <- "Benign"
amp.b1b2.mdn.gntp$tissue <- "Benign"
#combine dfs
cnv.mdn.gntp <- rbind(amp.b1.mdn.gntp, amp.b2.mdn.gntp, amp.b1b2.mdn.gntp)
#reorder
cnv.mdn.gntp <- cnv.mdn.gntp %>%
relocate(comparison, tissue)
#create table
cnv.mdn.gntp %>%
kbl(caption = "Median Fold Change (Amplification)", digits = 10) %>%
kable_classic(html_font = "Cambria") %>%
kable_styling(latex_options = "striped")
### **sample: table of median fold change**
#remove excess lines (WT)
amp.b1.mdn.smpl <- amp.b1.mdn.smpl %>% filter(genotype != "WT")
amp.b2.mdn.smpl <- amp.b2.mdn.smpl %>% filter(genotype != "WT")
#amp.b1b2.mdn.smpl <- amp.b1b2.mdn.smpl %>% filter(genotype != "WT")
#add column for comparisons
amp.b1.mdn.smpl$comparison <- "BRCA1 Carrier vs WT"
amp.b2.mdn.smpl$comparison <- "BRCA2 Carrier vs WT"
amp.b1b2.mdn.smpl$comparison <- "BRCA1/BRCA2 Carrier vs WT"
#add column for tissue type
amp.b1.mdn.smpl$tissue <- "Benign"
amp.b2.mdn.smpl$tissue <- "Benign"
amp.b1b2.mdn.smpl$tissue <- "Benign"
#combine dfs
cnv.mdn.smpl <- rbind(amp.b1.mdn.smpl, amp.b2.mdn.smpl, amp.b1b2.mdn.smpl)
#reorder
cnv.mdn.smpl <- cnv.mdn.smpl %>%
relocate(comparison, tissue)
#create table
cnv.mdn.smpl %>%
kbl(caption = "Median Fold Change (Amplification)", digits = 10) %>%
kable_classic(html_font = "Cambria") %>%
kable_styling(latex_options = "striped")
process_Deletions <- function(file_path) {
#read in data
data <- read.csv(file_path)
#filter for Deletions
Deletions <- data %>%
filter(state < 2)
#read in sample info
cancer.history <- read.xlsx("~/brca-new/Williams et al./williams-samples.xlsx")
cancer.history <- cancer.history %>%
rename(sample = "patient_id",
cancer = current_past_cancer.in.contralateral.breast,
tissue = Final.Path.Diagnosis) %>%
dplyr::select(sample, chemo, cancer, tissue)
#edit sample info
cancer.history$chemo <- gsub("N/A", "no chemo", cancer.history$chemo)
cancer.history$chemo <- gsub("N", "no chemo", cancer.history$chemo)
cancer.history$chemo <- gsub("Y", "chemo", cancer.history$chemo)
cancer.history$tissue <- gsub("R:", "", cancer.history$tissue)
cancer.history$tissue <- gsub("R: ", "", cancer.history$tissue)
cancer.history$tissue <- gsub("L: ", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" UDH", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" cysts", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" non-proliferative", "", cancer.history$tissue)
cancer.history$tissue <- gsub(" ", "", cancer.history$tissue)
#add sample info to df
Deletions <- Deletions %>%
left_join(cancer.history, by = "sample")
#add genotype for B1 or B2
Deletions <- Deletions %>%
mutate(genotype = ifelse(grepl("B1-6548", sample),
"B1/B2", sub("-.*", "", sample)))
#edit sample name
Deletions$sample <- gsub("-", ".", Deletions$sample)
#summarize state
Deletions <- Deletions %>%
group_by(cell_id) %>%
mutate(length = (as.numeric(end) - as.numeric(start)) / 1e6) %>%
mutate(sum.length = sum(length)) %>%
distinct(cell_id, .keep_all = TRUE) %>% #filter so each cell has 1 row
dplyr::select(cell_id, sample, genotype,  chemo, cancer, tissue, start, end, state, sum.length)
#extract the name from a column (e.g., sample_id)
if ("sample" %in% colnames(Deletions)) {
df_name <- unique(Deletions$sample)[1]  #take the first unique value
} else {
df_name <- tools::file_path_sans_ext(basename(file_path))  #use filename if column not present
}
assign(df_name, Deletions, envir = .GlobalEnv)  #save dataframe to global environment
return(df_name)  #return the name of the dataframe
}
#list of files
files <- c(
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET43-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET49-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6410-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6537-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6548-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B1HET6550-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET16-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET18-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET21-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET23-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET25-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/B2HET6532-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT6-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT62-hscn.csv",
"/Users/mahadbihie/brca-new/data_directory/allele_specific_cn/WT6752-hscn.csv"
)
#run multiple files through function
df_names <- lapply(files, process_Deletions)  #process and store names
